/*
 * This file is generated by jOOQ.
 */
package jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDate;
import java.time.LocalDateTime;

import jooq.enums.EventsEventType;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Events implements Serializable {

    private static final long serialVersionUID = 1L;

    private LocalDate endAt;
    private Boolean isApproved;
    private LocalDate startAt;
    private Long hostId;
    private Long id;
    private LocalDateTime recruitmentEndAt;
    private LocalDateTime recruitmentStartAt;
    private String thumbnail;
    private String title;
    private String uri;
    private EventsEventType eventType;
    private LocalDateTime createdAt;
    private LocalDateTime updatedAt;

    public Events() {}

    public Events(Events value) {
        this.endAt = value.endAt;
        this.isApproved = value.isApproved;
        this.startAt = value.startAt;
        this.hostId = value.hostId;
        this.id = value.id;
        this.recruitmentEndAt = value.recruitmentEndAt;
        this.recruitmentStartAt = value.recruitmentStartAt;
        this.thumbnail = value.thumbnail;
        this.title = value.title;
        this.uri = value.uri;
        this.eventType = value.eventType;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Events(
        LocalDate endAt,
        Boolean isApproved,
        LocalDate startAt,
        Long hostId,
        Long id,
        LocalDateTime recruitmentEndAt,
        LocalDateTime recruitmentStartAt,
        String thumbnail,
        String title,
        String uri,
        EventsEventType eventType,
        LocalDateTime createdAt,
        LocalDateTime updatedAt
    ) {
        this.endAt = endAt;
        this.isApproved = isApproved;
        this.startAt = startAt;
        this.hostId = hostId;
        this.id = id;
        this.recruitmentEndAt = recruitmentEndAt;
        this.recruitmentStartAt = recruitmentStartAt;
        this.thumbnail = thumbnail;
        this.title = title;
        this.uri = uri;
        this.eventType = eventType;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>duty_it.events.end_at</code>.
     */
    public LocalDate getEndAt() {
        return this.endAt;
    }

    /**
     * Setter for <code>duty_it.events.end_at</code>.
     */
    public Events setEndAt(LocalDate endAt) {
        this.endAt = endAt;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.is_approved</code>.
     */
    public Boolean getIsApproved() {
        return this.isApproved;
    }

    /**
     * Setter for <code>duty_it.events.is_approved</code>.
     */
    public Events setIsApproved(Boolean isApproved) {
        this.isApproved = isApproved;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.start_at</code>.
     */
    public LocalDate getStartAt() {
        return this.startAt;
    }

    /**
     * Setter for <code>duty_it.events.start_at</code>.
     */
    public Events setStartAt(LocalDate startAt) {
        this.startAt = startAt;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.host_id</code>.
     */
    public Long getHostId() {
        return this.hostId;
    }

    /**
     * Setter for <code>duty_it.events.host_id</code>.
     */
    public Events setHostId(Long hostId) {
        this.hostId = hostId;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>duty_it.events.id</code>.
     */
    public Events setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.recruitment_end_at</code>.
     */
    public LocalDateTime getRecruitmentEndAt() {
        return this.recruitmentEndAt;
    }

    /**
     * Setter for <code>duty_it.events.recruitment_end_at</code>.
     */
    public Events setRecruitmentEndAt(LocalDateTime recruitmentEndAt) {
        this.recruitmentEndAt = recruitmentEndAt;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.recruitment_start_at</code>.
     */
    public LocalDateTime getRecruitmentStartAt() {
        return this.recruitmentStartAt;
    }

    /**
     * Setter for <code>duty_it.events.recruitment_start_at</code>.
     */
    public Events setRecruitmentStartAt(LocalDateTime recruitmentStartAt) {
        this.recruitmentStartAt = recruitmentStartAt;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.thumbnail</code>.
     */
    public String getThumbnail() {
        return this.thumbnail;
    }

    /**
     * Setter for <code>duty_it.events.thumbnail</code>.
     */
    public Events setThumbnail(String thumbnail) {
        this.thumbnail = thumbnail;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>duty_it.events.title</code>.
     */
    public Events setTitle(String title) {
        this.title = title;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.uri</code>.
     */
    public String getUri() {
        return this.uri;
    }

    /**
     * Setter for <code>duty_it.events.uri</code>.
     */
    public Events setUri(String uri) {
        this.uri = uri;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.event_type</code>.
     */
    public EventsEventType getEventType() {
        return this.eventType;
    }

    /**
     * Setter for <code>duty_it.events.event_type</code>.
     */
    public Events setEventType(EventsEventType eventType) {
        this.eventType = eventType;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>duty_it.events.created_at</code>.
     */
    public Events setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>duty_it.events.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>duty_it.events.updated_at</code>.
     */
    public Events setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Events other = (Events) obj;
        if (this.endAt == null) {
            if (other.endAt != null)
                return false;
        }
        else if (!this.endAt.equals(other.endAt))
            return false;
        if (this.isApproved == null) {
            if (other.isApproved != null)
                return false;
        }
        else if (!this.isApproved.equals(other.isApproved))
            return false;
        if (this.startAt == null) {
            if (other.startAt != null)
                return false;
        }
        else if (!this.startAt.equals(other.startAt))
            return false;
        if (this.hostId == null) {
            if (other.hostId != null)
                return false;
        }
        else if (!this.hostId.equals(other.hostId))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.recruitmentEndAt == null) {
            if (other.recruitmentEndAt != null)
                return false;
        }
        else if (!this.recruitmentEndAt.equals(other.recruitmentEndAt))
            return false;
        if (this.recruitmentStartAt == null) {
            if (other.recruitmentStartAt != null)
                return false;
        }
        else if (!this.recruitmentStartAt.equals(other.recruitmentStartAt))
            return false;
        if (this.thumbnail == null) {
            if (other.thumbnail != null)
                return false;
        }
        else if (!this.thumbnail.equals(other.thumbnail))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.uri == null) {
            if (other.uri != null)
                return false;
        }
        else if (!this.uri.equals(other.uri))
            return false;
        if (this.eventType == null) {
            if (other.eventType != null)
                return false;
        }
        else if (!this.eventType.equals(other.eventType))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.endAt == null) ? 0 : this.endAt.hashCode());
        result = prime * result + ((this.isApproved == null) ? 0 : this.isApproved.hashCode());
        result = prime * result + ((this.startAt == null) ? 0 : this.startAt.hashCode());
        result = prime * result + ((this.hostId == null) ? 0 : this.hostId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.recruitmentEndAt == null) ? 0 : this.recruitmentEndAt.hashCode());
        result = prime * result + ((this.recruitmentStartAt == null) ? 0 : this.recruitmentStartAt.hashCode());
        result = prime * result + ((this.thumbnail == null) ? 0 : this.thumbnail.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.uri == null) ? 0 : this.uri.hashCode());
        result = prime * result + ((this.eventType == null) ? 0 : this.eventType.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Events (");

        sb.append(endAt);
        sb.append(", ").append(isApproved);
        sb.append(", ").append(startAt);
        sb.append(", ").append(hostId);
        sb.append(", ").append(id);
        sb.append(", ").append(recruitmentEndAt);
        sb.append(", ").append(recruitmentStartAt);
        sb.append(", ").append(thumbnail);
        sb.append(", ").append(title);
        sb.append(", ").append(uri);
        sb.append(", ").append(eventType);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
