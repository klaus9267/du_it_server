/*
 * This file is generated by jOOQ.
 */
package jooq.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Views implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer count;
    private Long eventId;
    private Long id;

    public Views() {}

    public Views(Views value) {
        this.count = value.count;
        this.eventId = value.eventId;
        this.id = value.id;
    }

    public Views(
        Integer count,
        Long eventId,
        Long id
    ) {
        this.count = count;
        this.eventId = eventId;
        this.id = id;
    }

    /**
     * Getter for <code>duty_it.views.count</code>.
     */
    public Integer getCount() {
        return this.count;
    }

    /**
     * Setter for <code>duty_it.views.count</code>.
     */
    public Views setCount(Integer count) {
        this.count = count;
        return this;
    }

    /**
     * Getter for <code>duty_it.views.event_id</code>.
     */
    public Long getEventId() {
        return this.eventId;
    }

    /**
     * Setter for <code>duty_it.views.event_id</code>.
     */
    public Views setEventId(Long eventId) {
        this.eventId = eventId;
        return this;
    }

    /**
     * Getter for <code>duty_it.views.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>duty_it.views.id</code>.
     */
    public Views setId(Long id) {
        this.id = id;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Views other = (Views) obj;
        if (this.count == null) {
            if (other.count != null)
                return false;
        }
        else if (!this.count.equals(other.count))
            return false;
        if (this.eventId == null) {
            if (other.eventId != null)
                return false;
        }
        else if (!this.eventId.equals(other.eventId))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.count == null) ? 0 : this.count.hashCode());
        result = prime * result + ((this.eventId == null) ? 0 : this.eventId.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Views (");

        sb.append(count);
        sb.append(", ").append(eventId);
        sb.append(", ").append(id);

        sb.append(")");
        return sb.toString();
    }
}
