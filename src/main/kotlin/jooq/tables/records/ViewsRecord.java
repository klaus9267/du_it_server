/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import jooq.tables.Views;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ViewsRecord extends UpdatableRecordImpl<ViewsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>duty_it.views.count</code>.
     */
    public ViewsRecord setCount(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.views.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>duty_it.views.event_id</code>.
     */
    public ViewsRecord setEventId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.views.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>duty_it.views.id</code>.
     */
    public ViewsRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.views.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ViewsRecord
     */
    public ViewsRecord() {
        super(Views.VIEWS);
    }

    /**
     * Create a detached, initialised ViewsRecord
     */
    public ViewsRecord(Integer count, Long eventId, Long id) {
        super(Views.VIEWS);

        setCount(count);
        setEventId(eventId);
        setId(id);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised ViewsRecord
     */
    public ViewsRecord(jooq.tables.pojos.Views value) {
        super(Views.VIEWS);

        if (value != null) {
            setCount(value.getCount());
            setEventId(value.getEventId());
            setId(value.getId());
            resetChangedOnNotNull();
        }
    }
}
