/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDateTime;

import jooq.tables.Bookmarks;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BookmarksRecord extends UpdatableRecordImpl<BookmarksRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>duty_it.bookmarks.is_added_to_calendar</code>.
     */
    public BookmarksRecord setIsAddedToCalendar(Boolean value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.is_added_to_calendar</code>.
     */
    public Boolean getIsAddedToCalendar() {
        return (Boolean) get(0);
    }

    /**
     * Setter for <code>duty_it.bookmarks.event_id</code>.
     */
    public BookmarksRecord setEventId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.event_id</code>.
     */
    public Long getEventId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>duty_it.bookmarks.id</code>.
     */
    public BookmarksRecord setId(Long value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.id</code>.
     */
    public Long getId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>duty_it.bookmarks.user_id</code>.
     */
    public BookmarksRecord setUserId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>duty_it.bookmarks.created_at</code>.
     */
    public BookmarksRecord setCreatedAt(LocalDateTime value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>duty_it.bookmarks.updated_at</code>.
     */
    public BookmarksRecord setUpdatedAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.bookmarks.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BookmarksRecord
     */
    public BookmarksRecord() {
        super(Bookmarks.BOOKMARKS);
    }

    /**
     * Create a detached, initialised BookmarksRecord
     */
    public BookmarksRecord(Boolean isAddedToCalendar, Long eventId, Long id, Long userId, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Bookmarks.BOOKMARKS);

        setIsAddedToCalendar(isAddedToCalendar);
        setEventId(eventId);
        setId(id);
        setUserId(userId);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised BookmarksRecord
     */
    public BookmarksRecord(jooq.tables.pojos.Bookmarks value) {
        super(Bookmarks.BOOKMARKS);

        if (value != null) {
            setIsAddedToCalendar(value.getIsAddedToCalendar());
            setEventId(value.getEventId());
            setId(value.getId());
            setUserId(value.getUserId());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
