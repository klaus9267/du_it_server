/*
 * This file is generated by jOOQ.
 */
package jooq.tables.records;


import java.time.LocalDate;
import java.time.LocalDateTime;

import jooq.enums.EventsEventType;
import jooq.tables.Events;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EventsRecord extends UpdatableRecordImpl<EventsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>duty_it.events.end_at</code>.
     */
    public EventsRecord setEndAt(LocalDate value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.end_at</code>.
     */
    public LocalDate getEndAt() {
        return (LocalDate) get(0);
    }

    /**
     * Setter for <code>duty_it.events.is_approved</code>.
     */
    public EventsRecord setIsApproved(Boolean value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.is_approved</code>.
     */
    public Boolean getIsApproved() {
        return (Boolean) get(1);
    }

    /**
     * Setter for <code>duty_it.events.start_at</code>.
     */
    public EventsRecord setStartAt(LocalDate value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.start_at</code>.
     */
    public LocalDate getStartAt() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>duty_it.events.host_id</code>.
     */
    public EventsRecord setHostId(Long value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.host_id</code>.
     */
    public Long getHostId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>duty_it.events.id</code>.
     */
    public EventsRecord setId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.id</code>.
     */
    public Long getId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>duty_it.events.recruitment_end_at</code>.
     */
    public EventsRecord setRecruitmentEndAt(LocalDateTime value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.recruitment_end_at</code>.
     */
    public LocalDateTime getRecruitmentEndAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>duty_it.events.recruitment_start_at</code>.
     */
    public EventsRecord setRecruitmentStartAt(LocalDateTime value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.recruitment_start_at</code>.
     */
    public LocalDateTime getRecruitmentStartAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>duty_it.events.thumbnail</code>.
     */
    public EventsRecord setThumbnail(String value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.thumbnail</code>.
     */
    public String getThumbnail() {
        return (String) get(7);
    }

    /**
     * Setter for <code>duty_it.events.title</code>.
     */
    public EventsRecord setTitle(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.title</code>.
     */
    public String getTitle() {
        return (String) get(8);
    }

    /**
     * Setter for <code>duty_it.events.uri</code>.
     */
    public EventsRecord setUri(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.uri</code>.
     */
    public String getUri() {
        return (String) get(9);
    }

    /**
     * Setter for <code>duty_it.events.event_type</code>.
     */
    public EventsRecord setEventType(EventsEventType value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.event_type</code>.
     */
    public EventsEventType getEventType() {
        return (EventsEventType) get(10);
    }

    /**
     * Setter for <code>duty_it.events.created_at</code>.
     */
    public EventsRecord setCreatedAt(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>duty_it.events.updated_at</code>.
     */
    public EventsRecord setUpdatedAt(LocalDateTime value) {
        set(12, value);
        return this;
    }

    /**
     * Getter for <code>duty_it.events.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EventsRecord
     */
    public EventsRecord() {
        super(Events.EVENTS);
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(LocalDate endAt, Boolean isApproved, LocalDate startAt, Long hostId, Long id, LocalDateTime recruitmentEndAt, LocalDateTime recruitmentStartAt, String thumbnail, String title, String uri, EventsEventType eventType, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(Events.EVENTS);

        setEndAt(endAt);
        setIsApproved(isApproved);
        setStartAt(startAt);
        setHostId(hostId);
        setId(id);
        setRecruitmentEndAt(recruitmentEndAt);
        setRecruitmentStartAt(recruitmentStartAt);
        setThumbnail(thumbnail);
        setTitle(title);
        setUri(uri);
        setEventType(eventType);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised EventsRecord
     */
    public EventsRecord(jooq.tables.pojos.Events value) {
        super(Events.EVENTS);

        if (value != null) {
            setEndAt(value.getEndAt());
            setIsApproved(value.getIsApproved());
            setStartAt(value.getStartAt());
            setHostId(value.getHostId());
            setId(value.getId());
            setRecruitmentEndAt(value.getRecruitmentEndAt());
            setRecruitmentStartAt(value.getRecruitmentStartAt());
            setThumbnail(value.getThumbnail());
            setTitle(value.getTitle());
            setUri(value.getUri());
            setEventType(value.getEventType());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
