/*
 * This file is generated by jOOQ.
 */
package jooq;


import jooq.tables.Bookmarks;
import jooq.tables.Events;
import jooq.tables.Hosts;
import jooq.tables.Users;
import jooq.tables.Views;
import jooq.tables.records.BookmarksRecord;
import jooq.tables.records.EventsRecord;
import jooq.tables.records.HostsRecord;
import jooq.tables.records.UsersRecord;
import jooq.tables.records.ViewsRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * duty_it.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BookmarksRecord> KEY_BOOKMARKS_PRIMARY = Internal.createUniqueKey(Bookmarks.BOOKMARKS, DSL.name("KEY_bookmarks_PRIMARY"), new TableField[] { Bookmarks.BOOKMARKS.ID }, true);
    public static final UniqueKey<EventsRecord> KEY_EVENTS_PRIMARY = Internal.createUniqueKey(Events.EVENTS, DSL.name("KEY_events_PRIMARY"), new TableField[] { Events.EVENTS.ID }, true);
    public static final UniqueKey<HostsRecord> KEY_HOSTS_PRIMARY = Internal.createUniqueKey(Hosts.HOSTS, DSL.name("KEY_hosts_PRIMARY"), new TableField[] { Hosts.HOSTS.ID }, true);
    public static final UniqueKey<HostsRecord> KEY_HOSTS_UK9G0HG6HKNG2B8HTBSNMJTPMG3 = Internal.createUniqueKey(Hosts.HOSTS, DSL.name("KEY_hosts_UK9g0hg6hkng2b8htbsnmjtpmg3"), new TableField[] { Hosts.HOSTS.NAME }, true);
    public static final UniqueKey<UsersRecord> KEY_USERS_PRIMARY = Internal.createUniqueKey(Users.USERS, DSL.name("KEY_users_PRIMARY"), new TableField[] { Users.USERS.ID }, true);
    public static final UniqueKey<ViewsRecord> KEY_VIEWS_PRIMARY = Internal.createUniqueKey(Views.VIEWS, DSL.name("KEY_views_PRIMARY"), new TableField[] { Views.VIEWS.ID }, true);
    public static final UniqueKey<ViewsRecord> KEY_VIEWS_UKI590VQERY9RU4C1V3NC3FMKN3 = Internal.createUniqueKey(Views.VIEWS, DSL.name("KEY_views_UKi590vqery9ru4c1v3nc3fmkn3"), new TableField[] { Views.VIEWS.EVENT_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<BookmarksRecord, EventsRecord> FK5180RCUNAOGKV8WGJ4EGF55XD = Internal.createForeignKey(Bookmarks.BOOKMARKS, DSL.name("FK5180rcunaogkv8wgj4egf55xd"), new TableField[] { Bookmarks.BOOKMARKS.EVENT_ID }, Keys.KEY_EVENTS_PRIMARY, new TableField[] { Events.EVENTS.ID }, true);
    public static final ForeignKey<BookmarksRecord, UsersRecord> FKDBSHO2E05W5R13FKJQFJMGE5F = Internal.createForeignKey(Bookmarks.BOOKMARKS, DSL.name("FKdbsho2e05w5r13fkjqfjmge5f"), new TableField[] { Bookmarks.BOOKMARKS.USER_ID }, Keys.KEY_USERS_PRIMARY, new TableField[] { Users.USERS.ID }, true);
    public static final ForeignKey<EventsRecord, HostsRecord> FKDQKIYKJ89A9GDFH6CEPO057O6 = Internal.createForeignKey(Events.EVENTS, DSL.name("FKdqkiykj89a9gdfh6cepo057o6"), new TableField[] { Events.EVENTS.HOST_ID }, Keys.KEY_HOSTS_PRIMARY, new TableField[] { Hosts.HOSTS.ID }, true);
    public static final ForeignKey<ViewsRecord, EventsRecord> FKBMSLLKMG09PXDBVHTVEW25HU = Internal.createForeignKey(Views.VIEWS, DSL.name("FKbmsllkmg09pxdbvhtvew25hu"), new TableField[] { Views.VIEWS.EVENT_ID }, Keys.KEY_EVENTS_PRIMARY, new TableField[] { Events.EVENTS.ID }, true);
}
