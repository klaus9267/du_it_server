version: "3.8"

services:
  app:
    image: ${IMAGE_REGISTRY}/${IMAGE_NAME}:${IMAGE_TAG:-latest}
    container_name: duit-server-prod
    profiles: ["app", "full"]
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - duit-network-prod
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  db:
    image: mysql:8.0
    container_name: duit-mysql-prod
    profiles: ["infra", "full"]
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    volumes:
      - mysql_data_prod:/var/lib/mysql
    restart: unless-stopped
    networks:
      - duit-network-prod
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-p${DB_PASSWORD}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  redis:
    image: redis:7-alpine
    container_name: duit-redis-prod
    profiles: ["infra", "full"]
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data_prod:/data
    restart: unless-stopped
    networks:
      - duit-network-prod
    command: redis-server --requirepass ${REDIS_PASSWORD} --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  prometheus:
    image: prom/prometheus:latest
    container_name: duit-prometheus-prod
    profiles: ["monitoring", "full"]
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data_prod:/prometheus
    restart: unless-stopped
    networks:
      - duit-network-prod

  grafana:
    image: grafana/grafana:latest
    container_name: duit-grafana-prod
    profiles: ["monitoring", "full"]
    ports:
      - "3000:3000"
    volumes:
      - grafana_data_prod:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    restart: unless-stopped
    networks:
      - duit-network-prod

volumes:
  mysql_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  prometheus_data_prod:
    driver: local
  grafana_data_prod:
    driver: local

networks:
  duit-network-prod:
    driver: bridge
