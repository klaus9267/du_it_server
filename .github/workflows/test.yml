on:
  push:
    branches: [main]
  workflow_dispatch:
  workflow_call:  # 다른 워크플로우에서 호출 가능
    inputs:
      upload-artifacts:
        description: 'Upload test artifacts'
        required: false
        default: false
        type: boolean
    outputs:
      test-result:
        description: 'Test execution result'
        value: ${{ jobs.test.outputs.result }}

jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.test-summary.outputs.result }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Create configuration
        run: |
          cat > src/main/resources/application.properties << EOF
          JWT_SECRET=${{ secrets.JWT_SECRET }}
          DB_HOST=${{ secrets.DB_HOST }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_PORT=${{ secrets.DB_PORT }}
          DB_NAME=${{ secrets.DB_NAME }}
          REDIS_HOST=${{ secrets.REDIS_HOST }}
          REDIS_PORT=${{ secrets.REDIS_PORT }}
          REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
          REDIS_TIMEOUT=${{ secrets.REDIS_TIMEOUT }}
          DISCORD_WEBHOOK_URL=${{ secrets.DISCORD_WEBHOOK_URL }}
          EOF
          
          cat > src/main/resources/firebase-key.json << EOF
          ${{ secrets.FIREBASE_KEY }}
          EOF

      - name: Run tests
        id: run-tests
        run: |
          echo "🧪 테스트 실행 중..."
          ./gradlew test --continue
          echo "test_exit_code=$?" >> $GITHUB_OUTPUT

      - name: Run compile check
        if: always()
        run: |
          echo "🔨 컴파일 체크 중..."
          ./gradlew compileKotlin compileTestKotlin

      - name: Test summary
        id: test-summary
        if: always()
        run: |
          echo "📊 테스트 결과 분석 중..."
          
          if [ -d "build/test-results/test" ]; then
            TOTAL_TESTS=$(find build/test-results/test -name "*.xml" -exec grep -o 'tests="[0-9]*"' {} \; | cut -d'"' -f2 | awk '{sum+=$1} END {print sum+0}')
            FAILED_TESTS=$(find build/test-results/test -name "*.xml" -exec grep -o 'failures="[0-9]*"' {} \; | cut -d'"' -f2 | awk '{sum+=$1} END {print sum+0}')
            SKIPPED_TESTS=$(find build/test-results/test -name "*.xml" -exec grep -o 'skipped="[0-9]*"' {} \; | cut -d'"' -f2 | awk '{sum+=$1} END {print sum+0}')
            
            echo "total_tests=$TOTAL_TESTS" >> $GITHUB_OUTPUT
            echo "failed_tests=$FAILED_TESTS" >> $GITHUB_OUTPUT
            echo "skipped_tests=$SKIPPED_TESTS" >> $GITHUB_OUTPUT
            
            if [ "$FAILED_TESTS" -eq 0 ]; then
              echo "result=success" >> $GITHUB_OUTPUT
              echo "✅ 모든 테스트 통과!"
            else
              echo "result=failure" >> $GITHUB_OUTPUT
              echo "❌ $FAILED_TESTS개 테스트 실패"
            fi
          else
            echo "result=no-tests" >> $GITHUB_OUTPUT
            echo "⚠️ 테스트 결과를 찾을 수 없음"
          fi

      - name: Upload test artifacts
        if: always() && inputs.upload-artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: |
            build/reports/tests/test/
            build/test-results/test/
          retention-days: 7