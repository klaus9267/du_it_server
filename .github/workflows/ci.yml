name: 🧪 du_it_server CI 테스트 자동화

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: 리포지토리를 가져옵니다
        uses: actions/checkout@v4

      - name: JDK 17을 설치합니다
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Gradle 캐시를 설정합니다
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Gradle 명령 실행을 위한 권한을 부여합니다
        run: chmod +x gradlew

      - name: 테스트 환경 설정을 생성합니다
        run: |
          cat > src/main/resources/application-test.yml << EOF
          spring:
            profiles:
              active: test
            datasource:
              url: jdbc:h2:mem:testdb
              driver-class-name: org.h2.Driver
              username: sa
              password: 
            jpa:
              hibernate:
                ddl-auto: create-drop
              show-sql: true
            data:
              redis:
                host: localhost
                port: 6379
          
          jwt:
            secret: test-secret-key-for-ci-environment-only
            access-token-validity: 86400000
          
          discord:
            webhook:
              url: http://test-webhook-url
          EOF

      - name: Gradle build를 수행합니다
        run: ./gradlew build

      - name: 테스트 결과를 PR에 코멘트로 등록합니다
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'
          comment_title: '🧪 테스트 결과'
          check_name: '테스트 실행 결과'
          report_individual_runs: true
          
      - name: 테스트 실패 시, 실패한 코드 라인에 Check 코멘트를 등록합니다
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          token: ${{ github.token }}
          check_name: '테스트 상세 리포트'
          fail_on_failure: true