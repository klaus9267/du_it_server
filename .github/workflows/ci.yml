name: CI

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  pull-requests: write
  pages: write
  id-token: write

jobs:
  test:
    name: 테스트 실행
    uses: ./.github/workflows/test.yml
    with:
      upload-artifacts: true
    secrets: inherit

  deploy-test-results:
    name: 테스트 결과 Pages 배포
    needs: test
    if: always()
    runs-on: ubuntu-latest
    outputs:
      page-url: ${{ steps.deployment.outputs.page_url }}test-reports/latest/
    
    steps:
      - name: Download test artifacts
        uses: actions/download-artifact@v4
        with:
          name: test-results-${{ github.run_id }}
          path: test-results/

      - name: Create Pages structure
        run: |
          mkdir -p pages/test-reports/latest
          cp -r test-results/* pages/test-reports/latest/
          
          # 인덱스 페이지 생성
          cat > pages/index.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <title>Test Reports</title>
              <meta charset="utf-8">
              <style>
                  body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Helvetica, Arial, sans-serif; margin: 40px; }
                  h1 { color: #24292e; }
                  a { color: #0366d6; text-decoration: none; }
                  a:hover { text-decoration: underline; }
                  .report-link { display: block; padding: 10px; margin: 10px 0; border: 1px solid #e1e4e8; border-radius: 6px; }
                  .info { color: #586069; font-size: 14px; margin-top: 10px; }
              </style>
          </head>
          <body>
              <h1>🧪 Test Reports</h1>
              <a href="test-reports/latest/" class="report-link">
                  📊 최신 테스트 결과 보기
              </a>
              <p class="info">마지막 업데이트: PR #${{ github.event.number }} ($(date -u '+%Y-%m-%d %H:%M:%S UTC'))</p>
          </body>
          </html>
          EOF

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: pages/

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Create deployment summary
        if: always()
        run: |
          echo "# 🌐 테스트 결과 Pages 배포 완료" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.deployment.outcome }}" == "success" ]; then
            echo "## ✅ 배포 성공!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "🔗 **[테스트 결과 웹에서 보기](${{ steps.deployment.outputs.page_url }}test-reports/latest/)** 🌐" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "- **배포 URL**: \`${{ steps.deployment.outputs.page_url }}test-reports/latest/\`" >> $GITHUB_STEP_SUMMARY
            echo "- **테스트 결과**: ${{ needs.test.outputs.test-result }}" >> $GITHUB_STEP_SUMMARY
            echo "- **PR 번호**: #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ 배포 실패!" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "배포 중 오류가 발생했습니다. 로그를 확인해주세요." >> $GITHUB_STEP_SUMMARY
          fi